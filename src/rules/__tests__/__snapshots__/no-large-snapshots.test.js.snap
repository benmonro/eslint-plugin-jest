// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`no-large-snapshots toMatchSnapshot expression statement and call expressions should report if maxSize is zero 1`] = `
Array [
  Object {
    "data": Object {
      "lineCount": 1,
      "lineLimit": 0,
    },
    "messageId": "noSnapshot",
    "node": Node {
      "_babelType": "CallExpression",
      "arguments": Array [],
      "callee": Node {
        "_babelType": "MemberExpression",
        "computed": false,
        "end": 33,
        "loc": SourceLocation {
          "end": Position {
            "column": 33,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "object": Node {
          "_babelType": "CallExpression",
          "arguments": Array [
            Node {
              "_babelType": "Identifier",
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 1,
                },
                "identifierName": "something",
                "start": Position {
                  "column": 7,
                  "line": 1,
                },
              },
              "name": "something",
              "range": Array [
                7,
                16,
              ],
              "start": 7,
              "type": "Identifier",
            },
          ],
          "callee": Node {
            "_babelType": "Identifier",
            "end": 6,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 1,
              },
              "identifierName": "expect",
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "name": "expect",
            "range": Array [
              0,
              6,
            ],
            "start": 0,
            "type": "Identifier",
          },
          "end": 17,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 1,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "range": Array [
            0,
            17,
          ],
          "start": 0,
          "type": "CallExpression",
        },
        "property": Node {
          "_babelType": "Identifier",
          "end": 33,
          "loc": SourceLocation {
            "end": Position {
              "column": 33,
              "line": 1,
            },
            "identifierName": "toMatchSnapshot",
            "start": Position {
              "column": 18,
              "line": 1,
            },
          },
          "name": "toMatchSnapshot",
          "range": Array [
            18,
            33,
          ],
          "start": 18,
          "type": "Identifier",
        },
        "range": Array [
          0,
          33,
        ],
        "start": 0,
        "type": "MemberExpression",
      },
      "end": 35,
      "loc": SourceLocation {
        "end": Position {
          "column": 35,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        35,
      ],
      "start": 0,
      "type": "CallExpression",
    },
  },
]
`;

exports[`no-large-snapshots toMatchSnapshot expression statement and call expressions should report if node has more lines of code than number given in sizeThreshold option 1`] = `
Array [
  Object {
    "data": Object {
      "lineCount": 108,
      "lineLimit": 70,
    },
    "messageId": "tooLongSnapshots",
    "node": Node {
      "_babelType": "CallExpression",
      "arguments": Array [],
      "callee": Node {
        "_babelType": "MemberExpression",
        "computed": false,
        "end": 33,
        "loc": SourceLocation {
          "end": Position {
            "column": 33,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "object": Node {
          "_babelType": "CallExpression",
          "arguments": Array [
            Node {
              "_babelType": "Identifier",
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 1,
                },
                "identifierName": "something",
                "start": Position {
                  "column": 7,
                  "line": 1,
                },
              },
              "name": "something",
              "range": Array [
                7,
                16,
              ],
              "start": 7,
              "type": "Identifier",
            },
          ],
          "callee": Node {
            "_babelType": "Identifier",
            "end": 6,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 1,
              },
              "identifierName": "expect",
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "name": "expect",
            "range": Array [
              0,
              6,
            ],
            "start": 0,
            "type": "Identifier",
          },
          "end": 17,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 1,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "range": Array [
            0,
            17,
          ],
          "start": 0,
          "type": "CallExpression",
        },
        "property": Node {
          "_babelType": "Identifier",
          "end": 33,
          "loc": SourceLocation {
            "end": Position {
              "column": 33,
              "line": 1,
            },
            "identifierName": "toMatchSnapshot",
            "start": Position {
              "column": 18,
              "line": 1,
            },
          },
          "name": "toMatchSnapshot",
          "range": Array [
            18,
            33,
          ],
          "start": 18,
          "type": "Identifier",
        },
        "range": Array [
          0,
          33,
        ],
        "start": 0,
        "type": "MemberExpression",
      },
      "end": 35,
      "loc": SourceLocation {
        "end": Position {
          "column": 35,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        35,
      ],
      "start": 0,
      "type": "CallExpression",
    },
  },
]
`;

exports[`no-large-snapshots toMatchSnapshot expression statement and call expressions should report if node has more than 50 lines of code and no sizeThreshold option is passed 1`] = `
Array [
  Object {
    "data": Object {
      "lineCount": 52,
      "lineLimit": 50,
    },
    "messageId": "tooLongSnapshots",
    "node": Node {
      "_babelType": "CallExpression",
      "arguments": Array [],
      "callee": Node {
        "_babelType": "MemberExpression",
        "computed": false,
        "end": 33,
        "loc": SourceLocation {
          "end": Position {
            "column": 33,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "object": Node {
          "_babelType": "CallExpression",
          "arguments": Array [
            Node {
              "_babelType": "Identifier",
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 1,
                },
                "identifierName": "something",
                "start": Position {
                  "column": 7,
                  "line": 1,
                },
              },
              "name": "something",
              "range": Array [
                7,
                16,
              ],
              "start": 7,
              "type": "Identifier",
            },
          ],
          "callee": Node {
            "_babelType": "Identifier",
            "end": 6,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 1,
              },
              "identifierName": "expect",
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "name": "expect",
            "range": Array [
              0,
              6,
            ],
            "start": 0,
            "type": "Identifier",
          },
          "end": 17,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 1,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "range": Array [
            0,
            17,
          ],
          "start": 0,
          "type": "CallExpression",
        },
        "property": Node {
          "_babelType": "Identifier",
          "end": 33,
          "loc": SourceLocation {
            "end": Position {
              "column": 33,
              "line": 1,
            },
            "identifierName": "toMatchSnapshot",
            "start": Position {
              "column": 18,
              "line": 1,
            },
          },
          "name": "toMatchSnapshot",
          "range": Array [
            18,
            33,
          ],
          "start": 18,
          "type": "Identifier",
        },
        "range": Array [
          0,
          33,
        ],
        "start": 0,
        "type": "MemberExpression",
      },
      "end": 35,
      "loc": SourceLocation {
        "end": Position {
          "column": 35,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        35,
      ],
      "start": 0,
      "type": "CallExpression",
    },
  },
]
`;

exports[`no-large-snapshots toMatchSnapshot expression statement and call expressions should report on 2 snapshots in the same test 1`] = `
Array [
  Array [
    Object {
      "data": Object {
        "lineCount": 58,
        "lineLimit": 50,
      },
      "messageId": "tooLongSnapshots",
      "node": Node {
        "_babelType": "CallExpression",
        "arguments": Array [],
        "callee": Node {
          "_babelType": "MemberExpression",
          "computed": false,
          "end": 33,
          "loc": SourceLocation {
            "end": Position {
              "column": 33,
              "line": 1,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "object": Node {
            "_babelType": "CallExpression",
            "arguments": Array [
              Node {
                "_babelType": "Identifier",
                "end": 16,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 1,
                  },
                  "identifierName": "something",
                  "start": Position {
                    "column": 7,
                    "line": 1,
                  },
                },
                "name": "something",
                "range": Array [
                  7,
                  16,
                ],
                "start": 7,
                "type": "Identifier",
              },
            ],
            "callee": Node {
              "_babelType": "Identifier",
              "end": 6,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 1,
                },
                "identifierName": "expect",
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "name": "expect",
              "range": Array [
                0,
                6,
              ],
              "start": 0,
              "type": "Identifier",
            },
            "end": 17,
            "loc": SourceLocation {
              "end": Position {
                "column": 17,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "range": Array [
              0,
              17,
            ],
            "start": 0,
            "type": "CallExpression",
          },
          "property": Node {
            "_babelType": "Identifier",
            "end": 33,
            "loc": SourceLocation {
              "end": Position {
                "column": 33,
                "line": 1,
              },
              "identifierName": "toMatchSnapshot",
              "start": Position {
                "column": 18,
                "line": 1,
              },
            },
            "name": "toMatchSnapshot",
            "range": Array [
              18,
              33,
            ],
            "start": 18,
            "type": "Identifier",
          },
          "range": Array [
            0,
            33,
          ],
          "start": 0,
          "type": "MemberExpression",
        },
        "end": 35,
        "loc": SourceLocation {
          "end": Position {
            "column": 35,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "range": Array [
          0,
          35,
        ],
        "start": 0,
        "type": "CallExpression",
      },
    },
  ],
  Array [
    Object {
      "data": Object {
        "lineCount": 58,
        "lineLimit": 50,
      },
      "messageId": "tooLongSnapshots",
      "node": Node {
        "_babelType": "CallExpression",
        "arguments": Array [],
        "callee": Node {
          "_babelType": "MemberExpression",
          "computed": false,
          "end": 33,
          "loc": SourceLocation {
            "end": Position {
              "column": 33,
              "line": 1,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "object": Node {
            "_babelType": "CallExpression",
            "arguments": Array [
              Node {
                "_babelType": "Identifier",
                "end": 16,
                "loc": SourceLocation {
                  "end": Position {
                    "column": 16,
                    "line": 1,
                  },
                  "identifierName": "something",
                  "start": Position {
                    "column": 7,
                    "line": 1,
                  },
                },
                "name": "something",
                "range": Array [
                  7,
                  16,
                ],
                "start": 7,
                "type": "Identifier",
              },
            ],
            "callee": Node {
              "_babelType": "Identifier",
              "end": 6,
              "loc": SourceLocation {
                "end": Position {
                  "column": 6,
                  "line": 1,
                },
                "identifierName": "expect",
                "start": Position {
                  "column": 0,
                  "line": 1,
                },
              },
              "name": "expect",
              "range": Array [
                0,
                6,
              ],
              "start": 0,
              "type": "Identifier",
            },
            "end": 17,
            "loc": SourceLocation {
              "end": Position {
                "column": 17,
                "line": 1,
              },
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "range": Array [
              0,
              17,
            ],
            "start": 0,
            "type": "CallExpression",
          },
          "property": Node {
            "_babelType": "Identifier",
            "end": 33,
            "loc": SourceLocation {
              "end": Position {
                "column": 33,
                "line": 1,
              },
              "identifierName": "toMatchSnapshot",
              "start": Position {
                "column": 18,
                "line": 1,
              },
            },
            "name": "toMatchSnapshot",
            "range": Array [
              18,
              33,
            ],
            "start": 18,
            "type": "Identifier",
          },
          "range": Array [
            0,
            33,
          ],
          "start": 0,
          "type": "MemberExpression",
        },
        "end": 35,
        "loc": SourceLocation {
          "end": Position {
            "column": 35,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "range": Array [
          0,
          35,
        ],
        "start": 0,
        "type": "CallExpression",
      },
    },
  ],
]
`;

exports[`no-large-snapshots toMatchSnapshot expression statement and call expressions should report on 2nd snapshot in a test, but not 1st 1`] = `
Array [
  Object {
    "data": Object {
      "lineCount": 58,
      "lineLimit": 50,
    },
    "messageId": "tooLongSnapshots",
    "node": Node {
      "_babelType": "CallExpression",
      "arguments": Array [],
      "callee": Node {
        "_babelType": "MemberExpression",
        "computed": false,
        "end": 33,
        "loc": SourceLocation {
          "end": Position {
            "column": 33,
            "line": 1,
          },
          "start": Position {
            "column": 0,
            "line": 1,
          },
        },
        "object": Node {
          "_babelType": "CallExpression",
          "arguments": Array [
            Node {
              "_babelType": "Identifier",
              "end": 16,
              "loc": SourceLocation {
                "end": Position {
                  "column": 16,
                  "line": 1,
                },
                "identifierName": "something",
                "start": Position {
                  "column": 7,
                  "line": 1,
                },
              },
              "name": "something",
              "range": Array [
                7,
                16,
              ],
              "start": 7,
              "type": "Identifier",
            },
          ],
          "callee": Node {
            "_babelType": "Identifier",
            "end": 6,
            "loc": SourceLocation {
              "end": Position {
                "column": 6,
                "line": 1,
              },
              "identifierName": "expect",
              "start": Position {
                "column": 0,
                "line": 1,
              },
            },
            "name": "expect",
            "range": Array [
              0,
              6,
            ],
            "start": 0,
            "type": "Identifier",
          },
          "end": 17,
          "loc": SourceLocation {
            "end": Position {
              "column": 17,
              "line": 1,
            },
            "start": Position {
              "column": 0,
              "line": 1,
            },
          },
          "range": Array [
            0,
            17,
          ],
          "start": 0,
          "type": "CallExpression",
        },
        "property": Node {
          "_babelType": "Identifier",
          "end": 33,
          "loc": SourceLocation {
            "end": Position {
              "column": 33,
              "line": 1,
            },
            "identifierName": "toMatchSnapshot",
            "start": Position {
              "column": 18,
              "line": 1,
            },
          },
          "name": "toMatchSnapshot",
          "range": Array [
            18,
            33,
          ],
          "start": 18,
          "type": "Identifier",
        },
        "range": Array [
          0,
          33,
        ],
        "start": 0,
        "type": "MemberExpression",
      },
      "end": 35,
      "loc": SourceLocation {
        "end": Position {
          "column": 35,
          "line": 1,
        },
        "start": Position {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        35,
      ],
      "start": 0,
      "type": "CallExpression",
    },
  },
]
`;
